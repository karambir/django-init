# For more information about the configurations used in this file, please
# see the Travis CI documentation: https://docs.travis-ci.com

language: python
dist: xenial

python:
  - '3.7.3'

node_js:
  - "10"

services:
  - docker

{%- if cookiecutter.postgis.lower() == 'y' %}
addons:
  apt:
    packages:
      - libgdal-dev
{%- endif %}

cache:
  pip: true
  directories:
  - node_modules  # NPM packages
  - .venv  # poetry virtualenv

services:
  - docker

env:
  global:
  - PGDATABASE=postgres
  - PGHOST=localhost
  - PGUSER=postgres
  - PGPASS=''
  - PGPORT=5432
{%- if cookiecutter.postgis.lower() == 'y' %}
  - DATABASE_URL=postgis://${PGUSER}:${PGPASS}@${PGHOST}:${PGPORT}/${PGDATABASE}
  - POSTGRES_IMAGE=mdillon/postgis:11
{%- else %}
  - DATABASE_URL=postgres://${PGUSER}:${PGPASS}@${PGHOST}:${PGPORT}/${PGDATABASE}
  - POSTGRES_IMAGE=postgres:11
{%- endif %}

before_install:
  - sudo service postgresql stop
  - docker run --rm --name pg-docker -d -p ${PGPORT}:5432 --tmpfs /var/lib/postgresql/data:rw ${POSTGRES_IMAGE}
  - docker ps

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

install:
  - pip install poetry
  {%- if cookiecutter.webpack.lower() == 'y' %}
  - npm install
  {%- endif %}
  - poetry config settings.virtualenvs.in-project true
  - poetry install -vv -E ansible
  - poetry run python -V

script:
- poetry run flake8
{% if cookiecutter.webpack.lower() == 'y' %}- npm run build{% endif %}
- poetry run pytest --cov -v --tb=native
{% if cookiecutter.add_ansible.lower() == 'y' %}- poetry run ansible-playbook -i provisioner/hosts provisioner/site.yml --syntax-check{% endif %}

notifications:
  email:
    on_success: change  # [always|never|change]
    on_failure: always  # [always|never|change]
