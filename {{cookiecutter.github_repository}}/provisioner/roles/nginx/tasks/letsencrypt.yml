{%raw%}---
- name: apt-get install letsencrypt dependencies packages
  apt:
    pkg:
      [
        "augeas-lenses",
        "dialog",
        "libaugeas0",
        "libffi-dev",
        "software-properties-common",
      ]
    state: present
    cache_valid_time: 300

- name: Add official Certbot repo
  apt_repository:
    repo: "ppa:certbot/certbot"
    update_cache: yes

- name: install certbot
  apt:
    pkg: ["certbot", "python-certbot-nginx"]
    state: present
    cache_valid_time: 300

- name: create certbot folder
  become: yes
  file: path={{ letsencrypt_challenge_root }} state=directory owner={{ user }} group={{ nginx_user }} mode="u=rwx,g=rwxs,o=r"

- name: upgrade ca-certificates
  apt:
    name: ca-certificates
    state: latest
    cache_valid_time: 300

- name: Check if certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ domain_name | first | replace('*.', '') }}/cert.pem
  register: letsencrypt_cert

- name: request cert
  command: "certbot certonly --webroot --webroot-path {{ letsencrypt_challenge_root }} --domains {{ domain_name }} --email {{ letsencrypt_email }} --agree-tos --non-interactive"
  args:
    creates: "{{ letsencrypt_ssl_cert_dir }}"
  become: yes
  when: not letsencrypt_cert.stat.exists

- name: remove any cert diretory if exist
  file: path={{ ssl_cert_dir }}/{{ domain_name }} state=absent

# running cron job each monday
- name: add letsencrypt renew cron
  cron: name="Renew all certificates" minute="0" hour="2" weekday="1" job="certbot renew --non-interactive --webroot --webroot-path {{ letsencrypt_challenge_root }} --renew-hook 'service nginx reload' >> /var/log/certbot.log"
  when: vm == 0 and use_letsencrypt
{%endraw%}
